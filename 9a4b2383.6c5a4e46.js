(window.webpackJsonp=window.webpackJsonp||[]).push([[579],{1006:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),b=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=b(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},u=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),d=b(n),u=r,m=d["".concat(o,".").concat(u)]||d[u]||p[u]||i;return n?a.a.createElement(m,c(c({ref:t},l),{},{components:n})):a.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<i;l++)o[l]=n[l];return a.a.createElement.apply(null,o)}return a.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},659:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return b}));var r=n(2),a=n(7),i=(n(0),n(1006)),o={id:"share",title:"Share"},c={unversionedId:"share",id:"version-0.60/share",isDocsHomePage:!1,title:"Share",description:"Reference",source:"@site/versioned_docs/version-0.60/share.md",slug:"/share",permalink:"/docs/0.60/share",editUrl:"https://github.com/facebook/react-native-website/blob/master/website/versioned_docs/version-0.60/share.md",version:"0.60",lastUpdatedAt:1603945169,sidebar:"version-0.60/api",previous:{title:"Shadow Props",permalink:"/docs/0.60/shadow-props"},next:{title:"StatusBarIOS",permalink:"/docs/0.60/statusbarios"}},s=[{value:"Methods",id:"methods",children:[{value:"<code>share()</code>",id:"share",children:[]},{value:"Content",id:"content",children:[]},{value:"Options",id:"options",children:[]},{value:"<code>sharedAction()</code>",id:"sharedaction",children:[]},{value:"<code>dismissedAction()</code>",id:"dismissedaction",children:[]}]},{value:"Basic Example",id:"basic-example",children:[]}],l={rightToc:s};function b(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"reference"},"Reference"),Object(i.b)("h2",{id:"methods"},"Methods"),Object(i.b)("h3",{id:"share"},Object(i.b)("inlineCode",{parentName:"h3"},"share()")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"static share(content, options)\n")),Object(i.b)("p",null,"Open a dialog to share text content."),Object(i.b)("p",null,"In iOS, Returns a Promise which will be invoked an object containing ",Object(i.b)("inlineCode",{parentName:"p"},"action"),", ",Object(i.b)("inlineCode",{parentName:"p"},"activityType"),". If the user dismissed the dialog, the Promise will still be resolved with action being ",Object(i.b)("inlineCode",{parentName:"p"},"Share.dismissedAction")," and all the other keys being undefined. Note that some share options will not appear or work on the iOS simulator."),Object(i.b)("p",null,"In Android, Returns a Promise which always be resolved with action being ",Object(i.b)("inlineCode",{parentName:"p"},"Share.sharedAction"),"."),Object(i.b)("h3",{id:"content"},"Content"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"message")," - a message to share"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"title")," - title of the message")),Object(i.b)("h4",{id:"ios"},"iOS"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"url")," - an URL to share")),Object(i.b)("p",null,"At least one of URL and message is required."),Object(i.b)("h3",{id:"options"},"Options"),Object(i.b)("h4",{id:"ios-1"},"iOS"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"subject")," - a subject to share via email"),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"excludedActivityTypes")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"tintColor"))),Object(i.b)("h4",{id:"android"},"Android"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"dialogTitle"))),Object(i.b)("hr",null),Object(i.b)("h3",{id:"sharedaction"},Object(i.b)("inlineCode",{parentName:"h3"},"sharedAction()")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"static sharedAction()\n")),Object(i.b)("p",null,"The content was successfully shared."),Object(i.b)("hr",null),Object(i.b)("h3",{id:"dismissedaction"},Object(i.b)("inlineCode",{parentName:"h3"},"dismissedAction()")),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"static dismissedAction()\n")),Object(i.b)("p",null,Object(i.b)("em",{parentName:"p"},"iOS Only"),". The dialog has been dismissed."),Object(i.b)("h2",{id:"basic-example"},"Basic Example"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"import React, { Component } from 'react';\nimport { Share, Button } from 'react-native';\n\nclass ShareExample extends Component {\n  onShare = async () => {\n    try {\n      const result = await Share.share({\n        message:\n          'React Native | A framework for building native apps using React'\n      });\n\n      if (result.action === Share.sharedAction) {\n        if (result.activityType) {\n          // shared with activity type of result.activityType\n        } else {\n          // shared\n        }\n      } else if (result.action === Share.dismissedAction) {\n        // dismissed\n      }\n    } catch (error) {\n      alert(error.message);\n    }\n  };\n\n  render() {\n    return <Button onPress={this.onShare} title=\"Share\" />;\n  }\n}\n")))}b.isMDXComponent=!0}}]);